//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type NicerButSlowerFilmListRating string

const (
	NicerButSlowerFilmListRating_G    NicerButSlowerFilmListRating = "G"
	NicerButSlowerFilmListRating_Pg   NicerButSlowerFilmListRating = "PG"
	NicerButSlowerFilmListRating_Pg13 NicerButSlowerFilmListRating = "PG-13"
	NicerButSlowerFilmListRating_R    NicerButSlowerFilmListRating = "R"
	NicerButSlowerFilmListRating_Nc17 NicerButSlowerFilmListRating = "NC-17"
)

func (e *NicerButSlowerFilmListRating) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "G":
		*e = NicerButSlowerFilmListRating_G
	case "PG":
		*e = NicerButSlowerFilmListRating_Pg
	case "PG-13":
		*e = NicerButSlowerFilmListRating_Pg13
	case "R":
		*e = NicerButSlowerFilmListRating_R
	case "NC-17":
		*e = NicerButSlowerFilmListRating_Nc17
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for NicerButSlowerFilmListRating enum")
	}

	return nil
}

func (e NicerButSlowerFilmListRating) String() string {
	return string(e)
}
