//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var NicerButSlowerFilmList = newNicerButSlowerFilmListTable("sakila", "nicer_but_slower_film_list", "")

type nicerButSlowerFilmListTable struct {
	mysql.Table

	// Columns
	Fid         mysql.ColumnInteger
	Title       mysql.ColumnString
	Description mysql.ColumnString
	Category    mysql.ColumnString
	Price       mysql.ColumnFloat
	Length      mysql.ColumnInteger
	Rating      mysql.ColumnString
	Actors      mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type NicerButSlowerFilmListTable struct {
	nicerButSlowerFilmListTable

	NEW nicerButSlowerFilmListTable
}

// AS creates new NicerButSlowerFilmListTable with assigned alias
func (a NicerButSlowerFilmListTable) AS(alias string) *NicerButSlowerFilmListTable {
	return newNicerButSlowerFilmListTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new NicerButSlowerFilmListTable with assigned schema name
func (a NicerButSlowerFilmListTable) FromSchema(schemaName string) *NicerButSlowerFilmListTable {
	return newNicerButSlowerFilmListTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new NicerButSlowerFilmListTable with assigned table prefix
func (a NicerButSlowerFilmListTable) WithPrefix(prefix string) *NicerButSlowerFilmListTable {
	return newNicerButSlowerFilmListTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new NicerButSlowerFilmListTable with assigned table suffix
func (a NicerButSlowerFilmListTable) WithSuffix(suffix string) *NicerButSlowerFilmListTable {
	return newNicerButSlowerFilmListTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newNicerButSlowerFilmListTable(schemaName, tableName, alias string) *NicerButSlowerFilmListTable {
	return &NicerButSlowerFilmListTable{
		nicerButSlowerFilmListTable: newNicerButSlowerFilmListTableImpl(schemaName, tableName, alias),
		NEW:                         newNicerButSlowerFilmListTableImpl("", "new", ""),
	}
}

func newNicerButSlowerFilmListTableImpl(schemaName, tableName, alias string) nicerButSlowerFilmListTable {
	var (
		FidColumn         = mysql.IntegerColumn("FID")
		TitleColumn       = mysql.StringColumn("title")
		DescriptionColumn = mysql.StringColumn("description")
		CategoryColumn    = mysql.StringColumn("category")
		PriceColumn       = mysql.FloatColumn("price")
		LengthColumn      = mysql.IntegerColumn("length")
		RatingColumn      = mysql.StringColumn("rating")
		ActorsColumn      = mysql.StringColumn("actors")
		allColumns        = mysql.ColumnList{FidColumn, TitleColumn, DescriptionColumn, CategoryColumn, PriceColumn, LengthColumn, RatingColumn, ActorsColumn}
		mutableColumns    = mysql.ColumnList{FidColumn, TitleColumn, DescriptionColumn, CategoryColumn, PriceColumn, LengthColumn, RatingColumn, ActorsColumn}
	)

	return nicerButSlowerFilmListTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Fid:         FidColumn,
		Title:       TitleColumn,
		Description: DescriptionColumn,
		Category:    CategoryColumn,
		Price:       PriceColumn,
		Length:      LengthColumn,
		Rating:      RatingColumn,
		Actors:      ActorsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
