//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var City = newCityTable("sakila", "city", "")

type cityTable struct {
	mysql.Table

	// Columns
	CityID     mysql.ColumnInteger
	City       mysql.ColumnString
	CountryID  mysql.ColumnInteger
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CityTable struct {
	cityTable

	NEW cityTable
}

// AS creates new CityTable with assigned alias
func (a CityTable) AS(alias string) *CityTable {
	return newCityTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CityTable with assigned schema name
func (a CityTable) FromSchema(schemaName string) *CityTable {
	return newCityTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CityTable with assigned table prefix
func (a CityTable) WithPrefix(prefix string) *CityTable {
	return newCityTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CityTable with assigned table suffix
func (a CityTable) WithSuffix(suffix string) *CityTable {
	return newCityTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCityTable(schemaName, tableName, alias string) *CityTable {
	return &CityTable{
		cityTable: newCityTableImpl(schemaName, tableName, alias),
		NEW:       newCityTableImpl("", "new", ""),
	}
}

func newCityTableImpl(schemaName, tableName, alias string) cityTable {
	var (
		CityIDColumn     = mysql.IntegerColumn("city_id")
		CityColumn       = mysql.StringColumn("city")
		CountryIDColumn  = mysql.IntegerColumn("country_id")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CityIDColumn, CityColumn, CountryIDColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{CityColumn, CountryIDColumn, LastUpdateColumn}
	)

	return cityTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CityID:     CityIDColumn,
		City:       CityColumn,
		CountryID:  CountryIDColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
