//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Inventory = newInventoryTable("sakila", "inventory", "")

type inventoryTable struct {
	mysql.Table

	// Columns
	InventoryID mysql.ColumnInteger
	FilmID      mysql.ColumnInteger
	StoreID     mysql.ColumnInteger
	LastUpdate  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type InventoryTable struct {
	inventoryTable

	NEW inventoryTable
}

// AS creates new InventoryTable with assigned alias
func (a InventoryTable) AS(alias string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InventoryTable with assigned schema name
func (a InventoryTable) FromSchema(schemaName string) *InventoryTable {
	return newInventoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InventoryTable with assigned table prefix
func (a InventoryTable) WithPrefix(prefix string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InventoryTable with assigned table suffix
func (a InventoryTable) WithSuffix(suffix string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInventoryTable(schemaName, tableName, alias string) *InventoryTable {
	return &InventoryTable{
		inventoryTable: newInventoryTableImpl(schemaName, tableName, alias),
		NEW:            newInventoryTableImpl("", "new", ""),
	}
}

func newInventoryTableImpl(schemaName, tableName, alias string) inventoryTable {
	var (
		InventoryIDColumn = mysql.IntegerColumn("inventory_id")
		FilmIDColumn      = mysql.IntegerColumn("film_id")
		StoreIDColumn     = mysql.IntegerColumn("store_id")
		LastUpdateColumn  = mysql.TimestampColumn("last_update")
		allColumns        = mysql.ColumnList{InventoryIDColumn, FilmIDColumn, StoreIDColumn, LastUpdateColumn}
		mutableColumns    = mysql.ColumnList{FilmIDColumn, StoreIDColumn, LastUpdateColumn}
	)

	return inventoryTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InventoryID: InventoryIDColumn,
		FilmID:      FilmIDColumn,
		StoreID:     StoreIDColumn,
		LastUpdate:  LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
