//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Address = newAddressTable("sakila", "address", "")

type addressTable struct {
	mysql.Table

	// Columns
	AddressID  mysql.ColumnInteger
	Address    mysql.ColumnString
	Address2   mysql.ColumnString
	District   mysql.ColumnString
	CityID     mysql.ColumnInteger
	PostalCode mysql.ColumnString
	Phone      mysql.ColumnString
	Location   mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type AddressTable struct {
	addressTable

	NEW addressTable
}

// AS creates new AddressTable with assigned alias
func (a AddressTable) AS(alias string) *AddressTable {
	return newAddressTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AddressTable with assigned schema name
func (a AddressTable) FromSchema(schemaName string) *AddressTable {
	return newAddressTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AddressTable with assigned table prefix
func (a AddressTable) WithPrefix(prefix string) *AddressTable {
	return newAddressTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AddressTable with assigned table suffix
func (a AddressTable) WithSuffix(suffix string) *AddressTable {
	return newAddressTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAddressTable(schemaName, tableName, alias string) *AddressTable {
	return &AddressTable{
		addressTable: newAddressTableImpl(schemaName, tableName, alias),
		NEW:          newAddressTableImpl("", "new", ""),
	}
}

func newAddressTableImpl(schemaName, tableName, alias string) addressTable {
	var (
		AddressIDColumn  = mysql.IntegerColumn("address_id")
		AddressColumn    = mysql.StringColumn("address")
		Address2Column   = mysql.StringColumn("address2")
		DistrictColumn   = mysql.StringColumn("district")
		CityIDColumn     = mysql.IntegerColumn("city_id")
		PostalCodeColumn = mysql.StringColumn("postal_code")
		PhoneColumn      = mysql.StringColumn("phone")
		LocationColumn   = mysql.StringColumn("location")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{AddressIDColumn, AddressColumn, Address2Column, DistrictColumn, CityIDColumn, PostalCodeColumn, PhoneColumn, LocationColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{AddressColumn, Address2Column, DistrictColumn, CityIDColumn, PostalCodeColumn, PhoneColumn, LocationColumn, LastUpdateColumn}
	)

	return addressTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AddressID:  AddressIDColumn,
		Address:    AddressColumn,
		Address2:   Address2Column,
		District:   DistrictColumn,
		CityID:     CityIDColumn,
		PostalCode: PostalCodeColumn,
		Phone:      PhoneColumn,
		Location:   LocationColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
