//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Customer = newCustomerTable("sakila", "customer", "")

type customerTable struct {
	mysql.Table

	// Columns
	CustomerID mysql.ColumnInteger
	StoreID    mysql.ColumnInteger
	FirstName  mysql.ColumnString
	LastName   mysql.ColumnString
	Email      mysql.ColumnString
	AddressID  mysql.ColumnInteger
	Active     mysql.ColumnBool
	CreateDate mysql.ColumnTimestamp
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CustomerTable struct {
	customerTable

	NEW customerTable
}

// AS creates new CustomerTable with assigned alias
func (a CustomerTable) AS(alias string) *CustomerTable {
	return newCustomerTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CustomerTable with assigned schema name
func (a CustomerTable) FromSchema(schemaName string) *CustomerTable {
	return newCustomerTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CustomerTable with assigned table prefix
func (a CustomerTable) WithPrefix(prefix string) *CustomerTable {
	return newCustomerTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CustomerTable with assigned table suffix
func (a CustomerTable) WithSuffix(suffix string) *CustomerTable {
	return newCustomerTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCustomerTable(schemaName, tableName, alias string) *CustomerTable {
	return &CustomerTable{
		customerTable: newCustomerTableImpl(schemaName, tableName, alias),
		NEW:           newCustomerTableImpl("", "new", ""),
	}
}

func newCustomerTableImpl(schemaName, tableName, alias string) customerTable {
	var (
		CustomerIDColumn = mysql.IntegerColumn("customer_id")
		StoreIDColumn    = mysql.IntegerColumn("store_id")
		FirstNameColumn  = mysql.StringColumn("first_name")
		LastNameColumn   = mysql.StringColumn("last_name")
		EmailColumn      = mysql.StringColumn("email")
		AddressIDColumn  = mysql.IntegerColumn("address_id")
		ActiveColumn     = mysql.BoolColumn("active")
		CreateDateColumn = mysql.TimestampColumn("create_date")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CustomerIDColumn, StoreIDColumn, FirstNameColumn, LastNameColumn, EmailColumn, AddressIDColumn, ActiveColumn, CreateDateColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{StoreIDColumn, FirstNameColumn, LastNameColumn, EmailColumn, AddressIDColumn, ActiveColumn, CreateDateColumn, LastUpdateColumn}
	)

	return customerTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CustomerID: CustomerIDColumn,
		StoreID:    StoreIDColumn,
		FirstName:  FirstNameColumn,
		LastName:   LastNameColumn,
		Email:      EmailColumn,
		AddressID:  AddressIDColumn,
		Active:     ActiveColumn,
		CreateDate: CreateDateColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
