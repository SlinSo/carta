//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Payment = newPaymentTable("sakila", "payment", "")

type paymentTable struct {
	mysql.Table

	// Columns
	PaymentID   mysql.ColumnInteger
	CustomerID  mysql.ColumnInteger
	StaffID     mysql.ColumnInteger
	RentalID    mysql.ColumnInteger
	Amount      mysql.ColumnFloat
	PaymentDate mysql.ColumnTimestamp
	LastUpdate  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type PaymentTable struct {
	paymentTable

	NEW paymentTable
}

// AS creates new PaymentTable with assigned alias
func (a PaymentTable) AS(alias string) *PaymentTable {
	return newPaymentTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PaymentTable with assigned schema name
func (a PaymentTable) FromSchema(schemaName string) *PaymentTable {
	return newPaymentTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PaymentTable with assigned table prefix
func (a PaymentTable) WithPrefix(prefix string) *PaymentTable {
	return newPaymentTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PaymentTable with assigned table suffix
func (a PaymentTable) WithSuffix(suffix string) *PaymentTable {
	return newPaymentTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPaymentTable(schemaName, tableName, alias string) *PaymentTable {
	return &PaymentTable{
		paymentTable: newPaymentTableImpl(schemaName, tableName, alias),
		NEW:          newPaymentTableImpl("", "new", ""),
	}
}

func newPaymentTableImpl(schemaName, tableName, alias string) paymentTable {
	var (
		PaymentIDColumn   = mysql.IntegerColumn("payment_id")
		CustomerIDColumn  = mysql.IntegerColumn("customer_id")
		StaffIDColumn     = mysql.IntegerColumn("staff_id")
		RentalIDColumn    = mysql.IntegerColumn("rental_id")
		AmountColumn      = mysql.FloatColumn("amount")
		PaymentDateColumn = mysql.TimestampColumn("payment_date")
		LastUpdateColumn  = mysql.TimestampColumn("last_update")
		allColumns        = mysql.ColumnList{PaymentIDColumn, CustomerIDColumn, StaffIDColumn, RentalIDColumn, AmountColumn, PaymentDateColumn, LastUpdateColumn}
		mutableColumns    = mysql.ColumnList{CustomerIDColumn, StaffIDColumn, RentalIDColumn, AmountColumn, PaymentDateColumn, LastUpdateColumn}
	)

	return paymentTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PaymentID:   PaymentIDColumn,
		CustomerID:  CustomerIDColumn,
		StaffID:     StaffIDColumn,
		RentalID:    RentalIDColumn,
		Amount:      AmountColumn,
		PaymentDate: PaymentDateColumn,
		LastUpdate:  LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
