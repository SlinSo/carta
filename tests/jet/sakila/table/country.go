//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Country = newCountryTable("sakila", "country", "")

type countryTable struct {
	mysql.Table

	// Columns
	CountryID  mysql.ColumnInteger
	Country    mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CountryTable struct {
	countryTable

	NEW countryTable
}

// AS creates new CountryTable with assigned alias
func (a CountryTable) AS(alias string) *CountryTable {
	return newCountryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CountryTable with assigned schema name
func (a CountryTable) FromSchema(schemaName string) *CountryTable {
	return newCountryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CountryTable with assigned table prefix
func (a CountryTable) WithPrefix(prefix string) *CountryTable {
	return newCountryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CountryTable with assigned table suffix
func (a CountryTable) WithSuffix(suffix string) *CountryTable {
	return newCountryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCountryTable(schemaName, tableName, alias string) *CountryTable {
	return &CountryTable{
		countryTable: newCountryTableImpl(schemaName, tableName, alias),
		NEW:          newCountryTableImpl("", "new", ""),
	}
}

func newCountryTableImpl(schemaName, tableName, alias string) countryTable {
	var (
		CountryIDColumn  = mysql.IntegerColumn("country_id")
		CountryColumn    = mysql.StringColumn("country")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CountryIDColumn, CountryColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{CountryColumn, LastUpdateColumn}
	)

	return countryTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CountryID:  CountryIDColumn,
		Country:    CountryColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
