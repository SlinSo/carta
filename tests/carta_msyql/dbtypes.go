package carta_mysql

import (
	"time"
)

// GENERATED BY CODEGEN.

/* Actor represents a row from actor. */
type Actor struct {
	ActorID    uint      `json:"actor_id" db:"actor_id" sql:"primary_key"`
	FirstName  string    `json:"first_name" db:"first_name"`
	LastName   string    `json:"last_name" db:"last_name"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`
}

/* Address represents a row from address. */
type Address struct {
	AddressID  uint      `json:"address_id" db:"address_id"`
	Address    string    `json:"address" db:"address"`
	Address2   *string   `json:"address2" db:"address2"`
	District   string    `json:"district" db:"district"`
	CityID     uint      `json:"city_id" db:"city_id"`
	PostalCode *string   `json:"postal_code" db:"postal_code"`
	Phone      string    `json:"phone" db:"phone"`
	Location   string    `json:"location" db:"location"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`

	AddressCity *City `json:"addresscity,omitempty"`
}

/* Category represents a row from category. */
type Category struct {
	CategoryID uint      `json:"category_id" db:"category_id"`
	Name       string    `json:"name" db:"name"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`
}

/* City represents a row from city. */
type City struct {
	CityID     uint      `json:"city_id" db:"city_id"`
	City       string    `json:"city" db:"city"`
	CountryID  uint      `json:"country_id" db:"country_id"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`

	CityCountry *Country `json:"citycountry,omitempty"`
}

/* Country represents a row from country. */
type Country struct {
	CountryID  uint      `json:"country_id" db:"country_id"`
	Country    string    `json:"country" db:"country"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`
}

/* Customer represents a row from customer. */
type Customer struct {
	CustomerID uint       `json:"customer_id" db:"customer_id"`
	StoreID    uint       `json:"store_id" db:"store_id"`
	FirstName  string     `json:"first_name" db:"first_name"`
	LastName   string     `json:"last_name" db:"last_name"`
	Email      *string    `json:"email" db:"email"`
	AddressID  uint       `json:"address_id" db:"address_id"`
	Active     bool       `json:"active" db:"active"`
	CreateDate time.Time  `json:"create_date" db:"create_date"`
	LastUpdate *time.Time `json:"last_update" db:"last_update"`

	CustomerAddress *Address `json:"customeraddress,omitempty"`
	CustomerStore   *Store   `json:"customerstore,omitempty"`
}

/* Film represents a row from film. */
type Film struct {
	FilmID             uint      `json:"film_id" db:"film_id"`
	Title              string    `json:"title" db:"title"`
	Description        *string   `json:"description" db:"description"`
	ReleaseYear        *int      `json:"release_year" db:"release_year"`
	LanguageID         uint      `json:"language_id" db:"language_id"`
	OriginalLanguageID *uint     `json:"original_language_id" db:"original_language_id"`
	RentalDuration     uint      `json:"rental_duration" db:"rental_duration"`
	RentalRate         float64   `json:"rental_rate" db:"rental_rate"`
	Length             *uint     `json:"length" db:"length"`
	ReplacementCost    float64   `json:"replacement_cost" db:"replacement_cost"`
	Rating             *string   `json:"rating" db:"rating"`
	SpecialFeatures    *string   `json:"special_features" db:"special_features"`
	LastUpdate         time.Time `json:"last_update" db:"last_update"`

	FilmLanguage         *Language `json:"filmlanguage,omitempty"`
	FilmLanguageOriginal *Language `json:"filmlanguageoriginal,omitempty"`
}

/* FilmActor represents a row from film_actor. */
type FilmActor struct {
	ActorID    uint      `json:"actor_id" db:"actor_id"`
	FilmID     uint      `json:"film_id" db:"film_id"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`

	FilmActorActor *Actor `json:"filmactoractor,omitempty"`
	FilmActorFilm  *Film  `json:"filmactorfilm,omitempty"`
}

/* FilmCategory represents a row from film_category. */
type FilmCategory struct {
	FilmID     uint      `json:"film_id" db:"film_id"`
	CategoryID uint      `json:"category_id" db:"category_id"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`

	FilmCategoryCategory *Category `json:"filmcategorycategory,omitempty"`
	FilmCategoryFilm     *Film     `json:"filmcategoryfilm,omitempty"`
}

/* FilmText represents a row from film_text. */
type FilmText struct {
	FilmID      int     `json:"film_id" db:"film_id"`
	Title       string  `json:"title" db:"title"`
	Description *string `json:"description" db:"description"`
}

/* Inventory represents a row from inventory. */
type Inventory struct {
	InventoryID uint      `json:"inventory_id" db:"inventory_id"`
	FilmID      uint      `json:"film_id" db:"film_id"`
	StoreID     uint      `json:"store_id" db:"store_id"`
	LastUpdate  time.Time `json:"last_update" db:"last_update"`

	InventoryFilm  *Film  `json:"inventoryfilm,omitempty"`
	InventoryStore *Store `json:"inventorystore,omitempty"`
}

/* Language represents a row from language. */
type Language struct {
	LanguageID uint      `json:"language_id" db:"language_id"`
	Name       string    `json:"name" db:"name"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`
}

/* Payment represents a row from payment. */
type Payment struct {
	PaymentID   uint       `json:"payment_id" db:"payment_id"`
	CustomerID  uint       `json:"customer_id" db:"customer_id"`
	StaffID     uint       `json:"staff_id" db:"staff_id"`
	RentalID    *int       `json:"rental_id" db:"rental_id"`
	Amount      float64    `json:"amount" db:"amount"`
	PaymentDate time.Time  `json:"payment_date" db:"payment_date"`
	LastUpdate  *time.Time `json:"last_update" db:"last_update"`

	PaymentCustomer *Customer `json:"paymentcustomer,omitempty"`
	PaymentRental   *Rental   `json:"paymentrental,omitempty"`
	PaymentStaff    *Staff    `json:"paymentstaff,omitempty"`
}

/* Rental represents a row from rental. */
type Rental struct {
	RentalID    int        `json:"rental_id" db:"rental_id"`
	RentalDate  time.Time  `json:"rental_date" db:"rental_date"`
	InventoryID uint       `json:"inventory_id" db:"inventory_id"`
	CustomerID  uint       `json:"customer_id" db:"customer_id"`
	ReturnDate  *time.Time `json:"return_date" db:"return_date"`
	StaffID     uint       `json:"staff_id" db:"staff_id"`
	LastUpdate  time.Time  `json:"last_update" db:"last_update"`

	RentalCustomer  *Customer  `json:"rentalcustomer,omitempty"`
	RentalInventory *Inventory `json:"rentalinventory,omitempty"`
	RentalStaff     *Staff     `json:"rentalstaff,omitempty"`
}

/* Staff represents a row from staff. */
type Staff struct {
	StaffID    uint      `json:"staff_id" db:"staff_id"`
	FirstName  string    `json:"first_name" db:"first_name"`
	LastName   string    `json:"last_name" db:"last_name"`
	AddressID  uint      `json:"address_id" db:"address_id"`
	Picture    *[]byte   `json:"picture" db:"picture"`
	Email      *string   `json:"email" db:"email"`
	StoreID    uint      `json:"store_id" db:"store_id"`
	Active     bool      `json:"active" db:"active"`
	Username   string    `json:"username" db:"username"`
	Password   *string   `json:"password" db:"password"`
	LastUpdate time.Time `json:"last_update" db:"last_update"`

	StaffAddress *Address `json:"staffaddress,omitempty"`
	StaffStore   *Store   `json:"staffstore,omitempty"`
}

/* Store represents a row from store. */
type Store struct {
	StoreID        uint      `json:"store_id" db:"store_id"`
	ManagerStaffID uint      `json:"manager_staff_id" db:"manager_staff_id"`
	AddressID      uint      `json:"address_id" db:"address_id"`
	LastUpdate     time.Time `json:"last_update" db:"last_update"`

	StoreAddress *Address `json:"storeaddress,omitempty"`
	StoreStaff   *Staff   `json:"storestaff,omitempty"`
}

// ^^ END OF GENERATED BY CODEGEN. ^^
